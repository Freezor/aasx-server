name: Prerelease on Merge to Main

on:
  push:
    branches:
      - main

jobs:
  create-new-prerelease:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set execution policy
        run: Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process
        shell: pwsh

      - name: Extract branch name
        id: extract_branch
        run: |
          git fetch --all
          $commitSHA = git rev-parse HEAD
          $branch = git branch -r --contains $commitSHA | Select-String -Pattern 'origin/' | Select-Object -First 1 | ForEach-Object { $_.Line -replace '.*origin/', '' } | ForEach-Object { $_.Trim() }
          echo "branch=$branch" >> $env:GITHUB_OUTPUT
          Write-Host "The current branch is: $branch"
        shell: pwsh

      - name: Generate Version Number
        working-directory: src
        id: generate_version_number
        run: |
          $branch = '${{ steps.extract_branch.outputs.branch }}'
          $version = .\BuildVersionNumber.ps1 -suffix alpha -branch $branch -githubRunNumber ${{ github.run_number }}
          echo "version=$version" >> $env:GITHUB_OUTPUT
          Write-Host "The version name to build is: $version"
        shell: pwsh

      - name: Update version numbers in project
        working-directory: src
        run: |
          $version = '${{ steps.generate_version_number.outputs.version }}'
          Write-Host "Updating project versions to: $version"
          .\UpdateProjectVersions.ps1 -version $version
        shell: pwsh

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Build release
        working-directory: src
        run: .\BuildForRelease.ps1
        shell: pwsh

      - name: Package release
        working-directory: src
        run: |
          $version = '${{ steps.generate_version_number.outputs.version }}'
          mkdir -p artefacts/release/$version
          Write-Host "Packaging for the release version: $version"
          .\PackageRelease.ps1 -version $version
        shell: pwsh

      - name: Rename the release assets
        working-directory: .
        run: |
          $version = '${{ steps.generate_version_number.outputs.version }}'
          $releaseDir = Join-Path $(Get-Location) "artefacts/release/$version"
          Write-Host "Release directory: $releaseDir"

          if (!(Test-Path $releaseDir)) {
              throw "The release directory does not exist: $releaseDir"
          }

          $archives = Get-ChildItem $releaseDir -Filter *.zip
          foreach($archive in $archives) {
              $path = $archive.FullName
              Write-Host "The path to the archive is: $path"

              $nameWoExt = [io.path]::GetFileNameWithoutExtension($path)
              Write-Host "The name without extension is: $nameWoExt"

              $target = Join-Path $releaseDir ($nameWoExt + "." + $version + ".zip")
              Write-Host "Moving: $path -> $target"
              Move-Item -Path $path -Destination $target
          }
        shell: pwsh

      - name: Generate release notes
        id: generate_release_notes
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.generate_version_number.outputs.version }}"
          release_name: "v${{ steps.generate_version_number.outputs.version }}"
          draft: false
          prerelease: true
          body: ${{ steps.generate_release_notes.outputs.body }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: https://uploads.github.com/repos/Freezor/aasx-server/releases/160065180/assets{?name,label}
          asset_path: artefacts/release/0.3.0-4-aasV3-alpha-latest/release-0.3.0-4-aasV3-alpha-latest.zip
          asset_name: release-0.3.0-4-aasV3-alpha-latest.zip
          asset_content_type: application/zip
        env:
          DOTNET_ROOT: C:\Program Files\dotnet