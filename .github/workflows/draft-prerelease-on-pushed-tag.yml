name: Draft Prerelease on Tag Push

on:
  push:
    tags:
      - 'v*'

jobs:
  draft_prerelease:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set execution policy
        run: |
          Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process

      - name: Extract branch name
        id: extract_branch
        run: echo "##[set-output name=branch;]$(echo ${{ github.ref }} | sed 's/refs\/tags\///')"

      - name: Check if tag contains 'develop'
        id: check_tag
        run: |
          if [[ "${{ steps.extract_branch.outputs.branch }}" == *"develop"* ]]; then 
            echo "##[set-output name=contains_develop;]true"; 
          else 
            echo "##[set-output name=contains_develop;]false"; 
            echo "Tag does not contain 'develop'. Stopping workflow."
            exit 1
          fi

      - name: Generate version number
        run: .\BuildVersionNumber.ps1

      - name: Update project versions
        run: .\UpdateProjectVersions.ps1

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Build release
        run: .\BuildForRelease.ps1

      - name: Rename release assets
        run: Rename-Item -Path "artefacts/release/*" -NewName "artefacts/release/${{ steps.extract_branch.outputs.branch }}"

      - name: Package release
        run: mkdir -p artefacts/release/${{ steps.extract_branch.outputs.branch }}

      - name: Generate release notes
        run: echo "Release notes for version ${{ steps.extract_branch.outputs.branch }}" > artefacts/release/${{ steps.extract_branch.outputs.branch }}/RELEASE_NOTES.txt

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.extract_branch.outputs.branch }}"
          release_name: "v${{ steps.extract_branch.outputs.branch }}"
          draft: true
          prerelease: true
          body: ${{ steps.extract_branch.outputs.branch }}

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artefacts/release/${{ steps.extract_branch.outputs.branch }}
          asset_name: release-${{ steps.extract_branch.outputs.branch }}.zip
          asset_content_type: application/zip

      - name: Set output
        id: output_result
        run: echo "##[set-output name=result;]${{ steps.check_tag.outputs.contains_develop }}"
