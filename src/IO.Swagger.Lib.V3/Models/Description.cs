/*
 * DotAAS Part 2 | HTTP/REST | Repository Service Specification
 *
 * The entire Repository Service Specification as part of Details of the Asset Administration Shell Part 2
 *
 * OpenAPI spec version: V3.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace IO.Swagger.Models
{
    using System.Text.Json;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The Description object enables servers to present their capabilities to the clients, in particular which profiles they implement. At least one defined profile is required. Additional, proprietary attributes might be included. Nevertheless, the server must not expect that a regular client understands them.
    /// </summary>
    [DataContract]
    public partial class Description : IEquatable<Description>
    {
        /// <summary>
        /// Gets or Sets Profiles
        /// </summary>
        public enum ProfilesEnum
        {
            /// <summary>
            /// Enum AssetAdministrationShellServiceSpecificationV30 for AssetAdministrationShellServiceSpecification/V3.0
            /// </summary>
            [EnumMember(Value = "AssetAdministrationShellServiceSpecification/V3.0")]
            AssetAdministrationShellServiceSpecificationV30 = 0,

            /// <summary>
            /// Enum AssetAdministrationShellServiceSpecificationV30MinimalProfile for AssetAdministrationShellServiceSpecification/V3.0-MinimalProfile
            /// </summary>
            [EnumMember(Value = "AssetAdministrationShellServiceSpecification/V3.0-MinimalProfile")]
            AssetAdministrationShellServiceSpecificationV30MinimalProfile = 1,

            /// <summary>
            /// Enum SubmodelServiceSpecificationV30 for SubmodelServiceSpecification/V3.0
            /// </summary>
            [EnumMember(Value = "SubmodelServiceSpecification/V3.0")]
            SubmodelServiceSpecificationV30 = 2,

            /// <summary>
            /// Enum SubmodelServiceSpecificationV30ValueProfile for SubmodelServiceSpecification/V3.0-ValueProfile
            /// </summary>
            [EnumMember(Value = "SubmodelServiceSpecification/V3.0-ValueProfile")]
            SubmodelServiceSpecificationV30ValueProfile = 3,

            /// <summary>
            /// Enum SubmodelServiceSpecificationV30MinimalProfile for SubmodelServiceSpecification/V3.0-MinimalProfile
            /// </summary>
            [EnumMember(Value = "SubmodelServiceSpecification/V3.0-MinimalProfile")]
            SubmodelServiceSpecificationV30MinimalProfile = 4,

            /// <summary>
            /// Enum AasxFileServerServiceSpecificationV30 for AasxFileServerServiceSpecification/V3.0
            /// </summary>
            [EnumMember(Value = "AasxFileServerServiceSpecification/V3.0")]
            AasxFileServerServiceSpecificationV30 = 5,

            /// <summary>
            /// Enum RegistryServiceSpecificationV30 for RegistryServiceSpecification/V3.0
            /// </summary>
            [EnumMember(Value = "RegistryServiceSpecification/V3.0")]
            RegistryServiceSpecificationV30 = 6,

            /// <summary>
            /// Enum RegistryServiceSpecificationV30AssetAdministrationShellRegistry for RegistryServiceSpecification/V3.0- AssetAdministrationShellRegistry
            /// </summary>
            [EnumMember(Value = "RegistryServiceSpecification/V3.0- AssetAdministrationShellRegistry")]
            RegistryServiceSpecificationV30AssetAdministrationShellRegistry = 7,

            /// <summary>
            /// Enum RegistryServiceSpecificationV30SubmodelRegistry for RegistryServiceSpecification/V3.0-SubmodelRegistry
            /// </summary>
            [EnumMember(Value = "RegistryServiceSpecification/V3.0-SubmodelRegistry")]
            RegistryServiceSpecificationV30SubmodelRegistry = 8,

            /// <summary>
            /// Enum RepositoryServiceSpecificationV30 for RepositoryServiceSpecification/V3.0
            /// </summary>
            [EnumMember(Value = "RepositoryServiceSpecification/V3.0")]
            RepositoryServiceSpecificationV30 = 9,

            /// <summary>
            /// Enum RepositoryServiceSpecificationV30MinimalProfile for RepositoryServiceSpecification/V3.0-MinimalProfile
            /// </summary>
            [EnumMember(Value = "RepositoryServiceSpecification/V3.0-MinimalProfile")]
            RepositoryServiceSpecificationV30MinimalProfile = 10,

            /// <summary>
            /// Enum AssetAdministrationShellRepositoryServiceSpecificationV30 for AssetAdministrationShellRepositoryServiceSpecification/V3.0
            /// </summary>
            [EnumMember(Value = "AssetAdministrationShellRepositoryServiceSpecification/V3.0")]
            AssetAdministrationShellRepositoryServiceSpecificationV30 = 11,

            /// <summary>
            /// Enum AssetAdministrationShellRepositoryServiceSpecificationV30MinimalProfile for AssetAdministrationShellRepositoryServiceSpecification/V3.0-MinimalProfile
            /// </summary>
            [EnumMember(Value = "AssetAdministrationShellRepositoryServiceSpecification/V3.0-MinimalProfile")]
            AssetAdministrationShellRepositoryServiceSpecificationV30MinimalProfile = 12,

            /// <summary>
            /// Enum SubmodelRepositoryServiceSpecificationV30 for SubmodelRepositoryServiceSpecification/V3.0
            /// </summary>
            [EnumMember(Value = "SubmodelRepositoryServiceSpecification/V3.0")]
            SubmodelRepositoryServiceSpecificationV30 = 13,

            /// <summary>
            /// Enum SubmodelRepositoryServiceSpecificationV30MinimalProfile for SubmodelRepositoryServiceSpecification/V3.0-MinimalProfile
            /// </summary>
            [EnumMember(Value = "SubmodelRepositoryServiceSpecification/V3.0-MinimalProfile")]
            SubmodelRepositoryServiceSpecificationV30MinimalProfile = 14,

            /// <summary>
            /// Enum RegistryAndDiscoveryServiceSpecificationV30 for RegistryAndDiscoveryServiceSpecification/V3.0
            /// </summary>
            [EnumMember(Value = "RegistryAndDiscoveryServiceSpecification/V3.0")]
            RegistryAndDiscoveryServiceSpecificationV30 = 15
        }

        /// <summary>
        /// Gets or Sets Profiles
        /// </summary>

        [DataMember(Name = "profiles")]
        public List<ProfilesEnum>? Profiles { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Description {\n");
            sb.Append("  Profiles: ").Append(Profiles).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson() => JsonSerializer.Serialize(this, options);

        private static readonly JsonSerializerOptions options = new() {WriteIndented = true, IgnoreNullValues = true, Converters = {new JsonStringEnumConverter()}};

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object? obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((Description)obj);
        }

        /// <summary>
        /// Returns true if Description instances are equal
        /// </summary>
        /// <param name="other">Instance of Description to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Description? other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return
                (
                    Profiles == other.Profiles ||
                    (Profiles != null &&
                     Profiles.SequenceEqual(other.Profiles))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                if (Profiles != null)
                    hashCode = (hashCode * 59) + Profiles.GetHashCode();
                return hashCode;
            }
        }

        #region Operators

#pragma warning disable 1591

        public static bool operator ==(Description left, Description right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(Description left, Description right)
        {
            return !Equals(left, right);
        }

#pragma warning restore 1591

        #endregion Operators
    }
}